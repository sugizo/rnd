<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.15">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.2.5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.5">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <alex.jenkins.plugins.FileSystemListParameterDefinition plugin="filesystem-list-parameter-plugin@0.0.3">
          <name>app</name>
          <description></description>
          <path>/Users/MacBookPro/Cloud/MEGA/Git/wordpress/</path>
          <selectedType>ALL</selectedType>
          <sortByLastModified>false</sortByLastModified>
          <sortReverseOrder>false</sortReverseOrder>
          <selectedEnumType>ALL</selectedEnumType>
          <regexIncludePattern></regexIncludePattern>
          <regexExcludePattern></regexExcludePattern>
          <formatter>
            <a class="string-builder"></a>
            <l>en_ID</l>
            <zero>0</zero>
          </formatter>
        </alex.jenkins.plugins.FileSystemListParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.42">
    <script>
pipeline {
    agent any

    stages {
        stage(&apos;download and extract wordpress&apos;) {
            steps {
                sh &apos;&apos;&apos;
# download wordpress
cd ~/Downloads
rm -f ~/Downloads/latest.zip
rm -f ~/Downloads/wordpress-*.zip
curl -O https://wordpress.org/latest.zip
unzip ~/Downloads/latest.zip
&apos;&apos;&apos;
            }
        }
        stage(&apos;remove existing folder&apos;) {
            steps {
                sh &apos;&apos;&apos;
# remove existing folder
rm -rf /Applications/XAMPP/xamppfiles/htdocs/$app
&apos;&apos;&apos;
            }
        }
        stage(&apos;move folder&apos;) {
            steps {
                sh &apos;&apos;&apos;
# move folder
mv ~/Downloads/wordpress /Applications/XAMPP/xamppfiles/htdocs/$app
&apos;&apos;&apos;
            }
        }
        stage(&apos;change permission&apos;) {
            steps {
                sh &apos;&apos;&apos;
# change permission
chmod -R 777 /Applications/XAMPP/xamppfiles/htdocs/$app
&apos;&apos;&apos;
            }
        }
        stage(&apos;copy app&apos;) {
            steps {
                sh &apos;&apos;&apos;
# copy app
rsync -zavur ~/Cloud/MEGA/Git/wordpress/$app /Applications/XAMPP/xamppfiles/htdocs/
&apos;&apos;&apos;
            }
        }
        stage(&apos;remove plugins&apos;) {
            steps {
                sh &apos;&apos;&apos;
# remove plugins
rm -f /Applications/XAMPP/xamppfiles/htdocs/$app/wp-content/plugins/hello.php
&apos;&apos;&apos;
            }
        }
        stage(&apos;change config&apos;) {
            steps {
                sh &apos;&apos;&apos;
# change config
echo "define( 'FS_METHOD', 'direct' );" >> /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config-sample.php
#cp /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config-sample.php /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config.php
#sed -i '' 's/database_name_here/$app/g' /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config.php
#sed -i '' 's/username_here/root/g' /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config.php
#sed -i '' 's/password_here//g' /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config.php
#sed -i '' 's/wp_/s_/g' /Applications/XAMPP/xamppfiles/htdocs/$app/wp-config.php
&apos;&apos;&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>